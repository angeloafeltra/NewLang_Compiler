/*
 * This file was automatically generated by EvoSuite
 * Mon May 22 18:57:07 GMT 2023
 */

package evosuite_test;

import org.apache.commons.lang3.exception.ExceptionUtils;
import org.junit.jupiter.api.Test;
import static org.junit.Assert.*;
import compiler.nodi.FunOp;
import compiler.nodi.VarDeclOp;
import compiler.utilsClass.Decl;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import org.junit.runner.RunWith;

public class Decl_ESTest {

  @Test
  public void test0()  throws Throwable  {
      Decl decl0 = new Decl();
      ArrayList<VarDeclOp> arrayList0 = decl0.getVarDeclList();
      decl0.addsVarDeclList(arrayList0);
      assertEquals(0, arrayList0.size());
  }

  @Test
  public void test1()  throws Throwable  {
      LinkedList<VarDeclOp> linkedList0 = new LinkedList<VarDeclOp>();
      LinkedList<FunOp> linkedList1 = new LinkedList<FunOp>();
      Decl decl0 = new Decl(linkedList0, linkedList1);
      decl0.addsFunOpList(linkedList1);
      assertEquals(0, linkedList1.size());
  }

  @Test
  public void test2()  throws Throwable  {
      LinkedList<FunOp> linkedList0 = new LinkedList<FunOp>();
      Decl decl0 = null;
      try {
        decl0 = new Decl((List<VarDeclOp>) null, linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
          String stacktrace = ExceptionUtils.getStackTrace(e);
          assertTrue(stacktrace.contains("java.util.ArrayList"));
      }
  }

  @Test
  public void test3()  throws Throwable  {
      Decl decl0 = new Decl();
      decl0.addVarDecl((VarDeclOp) null);
      ArrayList<VarDeclOp> arrayList0 = decl0.getVarDeclList();
      assertEquals(1, arrayList0.size());
  }

  @Test
  public void test4()  throws Throwable  {
      Decl decl0 = new Decl();
      // Undeclared exception!
      try { 
        decl0.addsFunOpList((List<FunOp>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
          String stacktrace = ExceptionUtils.getStackTrace(e);
          assertTrue(stacktrace.contains("java.util.ArrayList"));
      }
  }

  @Test
  public void test5()  throws Throwable  {
      Decl decl0 = new Decl();
      // Undeclared exception!
      try { 
        decl0.addsVarDeclList((List<VarDeclOp>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
          String stacktrace = ExceptionUtils.getStackTrace(e);
          assertTrue(stacktrace.contains("java.util.ArrayList"));
      }
  }

  @Test
  public void test6()  throws Throwable  {
      Decl decl0 = new Decl();
      decl0.addFunOp((FunOp) null);
      ArrayList<FunOp> arrayList0 = decl0.getFunOpList();
      assertEquals(1, arrayList0.size());
  }

  @Test
  public void test7()  throws Throwable  {
      Decl decl0 = new Decl();
      ArrayList<VarDeclOp> arrayList0 = decl0.getVarDeclList();
      ArrayList<FunOp> arrayList1 = decl0.getFunOpList();
      Decl decl1 = new Decl(arrayList0, arrayList1);
      assertFalse(decl1.equals((Object)decl0));
  }
}
