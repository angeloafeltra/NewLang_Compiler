/*
 * This file was automatically generated by EvoSuite
 * Mon May 22 18:46:16 GMT 2023
 */

package evosuite_test.nodi.expr;

import compiler.visitors.TranslatorVisitor;
import org.apache.commons.lang3.exception.ExceptionUtils;
import org.junit.jupiter.api.Test;
import static org.junit.Assert.*;
import compiler.nodi.expr.Identifier;

public class Identifier_ESTest {

  @Test
  public void test0()  throws Throwable  {
      Identifier identifier0 = new Identifier("");
      identifier0.setUserObject("");
      String string0 = identifier0.toString();
      assertEquals("", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      Identifier identifier0 = new Identifier("yU';Q/'9q=*0I<;");
      identifier0.setTipoEspressione("yU';Q/'9q=*0I<;");
      String string0 = identifier0.getTipoEspressione();
      assertEquals("yU';Q/'9q=*0I<;", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      Identifier identifier0 = new Identifier((String) null);
      String string0 = identifier0.getLessema();
      assertNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      Identifier identifier0 = new Identifier("yU';Q/'9q=*0I<;");
      String string0 = identifier0.getLessema();
      assertEquals("yU';Q/'9q=*0I<;", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      Identifier identifier0 = new Identifier("");
      String string0 = identifier0.getLessema();
      assertEquals("", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      Identifier identifier0 = new Identifier("");
      String string0 = identifier0.getTipoEspressione();
      assertNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      Identifier identifier0 = new Identifier("");
      String string0 = identifier0.toString();
      assertEquals("ID: ", string0);
  }

  @Test
  public void test7()  throws Throwable  {
      Identifier identifier0 = new Identifier("");
      identifier0.setTipoEspressione("");
      String string0 = identifier0.getTipoEspressione();
      assertEquals("", string0);
  }

  @Test
  public void test8()  throws Throwable  {
      Identifier identifier0 = new Identifier("");
      identifier0.setLessema("");
      assertNull(identifier0.getMode());
  }


  @Test
  public void test9()  throws Throwable  {
      TranslatorVisitor translatorVisitor0 = new TranslatorVisitor();
      Identifier identifier0 = new Identifier("aritmetica");
      try { 
        identifier0.accept(translatorVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
          String stacktrace = ExceptionUtils.getStackTrace(e);
          assertTrue(stacktrace.contains("compiler.visitors.TranslatorVisitor"));
      }
  }


}
